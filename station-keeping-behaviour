#!/usr/bin/env python
import time

import boatdclient
from boatdclient import Point, Bearing

from navigate import Navigator

points = boatdclient.get_current_waypoints()
minutes_in_box = 5

class StationKeepingBehaviour(Navigator):
    def __init__(self):
        super(StationKeepingBehaviour, self).__init__(enable_tacking=False)
        self.center = (points[0] + points[1] + points[2] + points[3]) / 4
        self.set_target(self.center)
        self.edge_bearing_to_center = None
        self.center_reached = False
        self.band_entered = False
        self.band_exited = False
        self.enter_time = None
        self.exit_time = None
        self.time_to_center = None
        self.at_line_time = None
        
        sorted_points = []
        for point in points:
            sorted_points.append((self.boat.position.distance_to(point), point))
        self.nearest_line_points = sorted(sorted_points, key=lambda x: x[0])
        self.nearest_line_points = [n[1] for n in self.nearest_line_points][0:2]

    def check_new_target(self):
        if self.boat.position.distance_to(self.center) < 1:
            if self.center_reached is False:
                self.time_to_center = time.time() - self.at_line_time
            self.center_reached = True

        if self.center_reached is False:  # go toward center
            #FIXME (?) only when exactly equal to, no error either side
            if cross_track_distance(self.nearest_line_points[1], self.nearest_line_points[0]) <= 2 and \ 
               self.band_entered is False:
            
                print 'YOU HAVE ENTERED THE BAND ' * 20
                self.band_entered = True
                self.enter_time = time.time()
                self.bearing_edge_to_center = self.boat.position.bearing_to(self.center)
                
            if cross_track_distance(self.nearest_line_points[1], self.nearest_line_points[0]) >= 2 and \ 
               self.band_entered is True and self.band_exited is False:
               
                print 'YOU HAVE EXITED THE BAND ' * 20
                self.band_exited = True
                self.exit_time = time.time()
                self.at_line_time = (self.enter_time + self.exit_time)/ 2

            return None

        elif self.center_reached is True:
            if time.time() < self.at_line_time + (minutes_in_box * 60) - self.time_to_center:
                return None
            else:
                return self.bearing_edge_to_center


if __name__ == '__main__':
    behaviour = StationKeepingBehaviour()
    behaviour.run()
